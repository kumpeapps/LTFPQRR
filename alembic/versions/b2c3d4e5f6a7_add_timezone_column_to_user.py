"""add timezone column to user table

Revision ID: b2c3d4e5f6a7
Revises: a1b2c3d4e5f6
Create Date: 2025-07-19 02:00:00.000000

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'b2c3d4e5f6a7'
down_revision = 'a1b2c3d4e5f6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Get current connection and check existing columns
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    
    # Check if user table exists
    if 'user' in inspector.get_table_names():
        existing_columns = [col['name'] for col in inspector.get_columns('user')]
        
        # Add timezone column if it doesn't exist
        if 'timezone' not in existing_columns:
            op.add_column('user', sa.Column('timezone', sa.String(length=50), nullable=True, default='UTC'))
            
            # Update existing users to have UTC timezone
            connection.execute(sa.text("UPDATE user SET timezone = 'UTC' WHERE timezone IS NULL"))
    else:
        # If user table doesn't exist, log it but don't fail
        print("Warning: user table does not exist, skipping timezone column addition")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Get current connection and check existing columns
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    
    # Check if user table exists and has timezone column
    if 'user' in inspector.get_table_names():
        existing_columns = [col['name'] for col in inspector.get_columns('user')]
        
        if 'timezone' in existing_columns:
            op.drop_column('user', 'timezone')

    # ### end Alembic commands ###
