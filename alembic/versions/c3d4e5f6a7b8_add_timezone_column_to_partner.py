"""add timezone column to partner table

Revision ID: c3d4e5f6a7b8
Revises: b2c3d4e5f6a7
Create Date: 2025-07-19 03:00:00.000000

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'c3d4e5f6a7b8'
down_revision = 'b2c3d4e5f6a7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Get current connection and check existing columns
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    
    # Check if partner table exists
    if 'partner' in inspector.get_table_names():
        existing_columns = [col['name'] for col in inspector.get_columns('partner')]
        
        # Add timezone column if it doesn't exist
        if 'timezone' not in existing_columns:
            op.add_column('partner', sa.Column('timezone', sa.String(length=50), nullable=True, default='UTC'))
            
            # Update existing partners to have UTC timezone
            connection.execute(sa.text("UPDATE partner SET timezone = 'UTC' WHERE timezone IS NULL"))
    else:
        # If partner table doesn't exist, log it but don't fail
        print("Warning: partner table does not exist, skipping timezone column addition")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Get current connection and check existing columns
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    
    # Check if partner table exists and has timezone column
    if 'partner' in inspector.get_table_names():
        existing_columns = [col['name'] for col in inspector.get_columns('partner')]
        
        if 'timezone' in existing_columns:
            op.drop_column('partner', 'timezone')

    # ### end Alembic commands ###
